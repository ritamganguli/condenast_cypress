const gmailTester = require("gmail-tester");
const path = require("path");
const { defineConfig } = require("cypress");
module.exports = defineConfig({
  defaultCommandTimeout: 40000,
  pageLoadTimeout: 40000,
  responseTimeout: 60000,
  viewportWidth: 1440,
  viewportHeight: 900,
  video: false,
  timeout: 40000,
  chromeWebSecurity: false,
  electronWebSecurity: false,
  env: {
    environment: "production" || 'staging',
    geoLocation: "US",
    validateImageUrl: false,
    linksToHitPerSection: 0,
    CYPRESS_API_URL:
      "https://sorry-cypress-gateway-verso-services.gp-nonprod-na-0.conde.digital",
  },
  fixturesFolder: "fixtures",
  screenshotsFolder: "screenshots",
  videosFolder: "videos",
  blockHosts: [
    "cdn.cookielaw.org",
    "z-na.amazon-adsystem.com",
    "*.googlesyndication.com",
    "aa.agkn.com",
    "tag.bounceexchange.com",
    "a.ad.gt",
    "securepubads.g.doubleclick.net",
    "z.moatads.com",
    "c.amazon-adsystem.com",
    "js-sec.indexww.com",
    "cdn.cookielaw.org",
    "geolocation.onetrust.com",
    "mb.moatads.com",
    "px.moatads.com",
    "as-sec.casalemedia.com",
    "d1z2jf7jlzjs58.cloudfront.net",
    "cdn.parsely.com",
    "cdn.mediavoice.com",
    "segment-data.zqtk.net",
    "pixel.condenastdigital.com",
    "94437bcea070c2e10bb9edae458488de.safeframe.googlesyndication.com",
    "tpc.googlesyndication.com",
    "platform.twitter.com",
    "www.googletagmanager.com",
    "srv-2020-10-05-09.pixel.parsely.com",
    "plugin.mediavoice.com",
    "polarcdn-terrax.com",
    "wren.condenastdigital.com",
    "www.googletagservices.com",
    "syndication.twitter.com",
    "www.google-analytics.com",
    "secure.quantserve.com",
    "connect.facebook.net",
    "tag.bounceexchange.com",
    "static.ads-twitter.com",
    "ak.sail-horizon.com",
    "a.ad.gt",
    "www.medtargetsystem.com",
    "snap.licdn.com",
    "sc-static.net",
    "s.pinimg.com",
    "tru.am",
    "static.hotjar.com",
    "z-na.associates-amazon.com",
    "s.skimresources.com",
    "analytics.tiktok.com",
    "sb.scorecardresearch.com",
    "pixel.tapad.com",
    "rules.quantcount.com",
    "t.skimresources.com",
    "p.skimresources.com",
    "r.skimresources.com",
    "assets.bounceexchange.com",
    "t.co",
    "code.jquery.com",
    "match.deepintent.com",
    "trc.lhmos.com",
    "js-agent.newrelic.com",
    "bam.nr-data.net",
    "api.sail-personalize.com",
    "p.ad.gt",
    "assoc-na.associates-amazon.com",
    "script.hotjar.com",
    "vars.hotjar.com",
    "sf19-scmcdn-va.ibytedtos.com",
    "pixel.quantserve.com",
    "stats.g.doubleclick.net",
    "www.facebook.com",
    "4d.condenastdigital.com",
    "capture.condenastdigital.com",
    "px.ads.linkedin.com",
    "ct.pinterest.com",
    "www.google.com",
    "www.google.co.in",
    "api.bounceexchange.com",
    "tr.snapchat.com",
    "pixels.ad.gt",
    "ids.ad.gt",
    "in.hotjar.com",
    "x.bidswitch.net",
    "ib.adnxs.com",
    "match.sharethrough.com",
    "p.adsymptotic.com",
    "events.bouncex.net",
    "pagead2.googlesyndication.com",
    "analytics.twitter.com",
    "condenast.demdex.net",
    "linkedin.com",
  ],
  projectId: "cypress-automation-tests",
  watchForFileChanges: false,
  e2e: {
    // We've imported your old cypress plugins here.
    // You may want to clean this up later by importing these.
    testIsolation: false,
    setupNodeEvents(on, config) {
      on("task", {
        "gmail:get-messages": async (args) => {
          const messages = await gmailTester.get_messages(
            path.resolve(__dirname, "credentials.json"),
            path.resolve(__dirname, "token.json"),
            args.options
          );
          return messages;
        },
      });
      return require("./plugins/index.js")(on, config);
    },
    excludeSpecPattern:
      //All GQ non english brands will be excluded in drone for hourly run. https://cnissues.atlassian.net/browse/AUTOMATION-1403
      //Excluding gmailtester from daily run
      [
        "test-suites/**/the-author-hub-page.spec.js",
        "test-suites/**/gq-france",
        "test-suites/**/gq-tw",
        "test-suites/**/gq-spain",
        "test-suites/**/gq-japan",
        "test-suites/**/gq-mexico",
        "test-suites/**/gq-italy",
        "test-suites/**/gq-germany",
        "test-suites/amp/conde-nast-traveler/adServerSelection.spec.js",
        "test-suites/**/ad-admin",
        "test-suites/**/vogueWorld-MetGala-EventBanner-validation.spec.js",
        "test-suites/**/vogueWorld-MetGala-tagPage-USUK.spec.js",
        "test-suites/**/vogueWorld-MetGala-tagPage-other-markets.spec.js",
        "test-suites/**/vogue-voting-onTheme-validation.spec.js",
        "test-suites/**/vogue-voting-favLook-validation.spec.js",
        "test-suites/**/vogue-polaroid.spec.js",
        "test-suites/**/ad-directory-formPage.spec.js"
      ],
    specPattern: "test-suites**/**/*.{js,jsx,ts,tsx}",
    supportFile: "components/index.js",
  },
});
