{
  "version": 3,
  "sources": ["../src/log.ts", "../src/http-proxy/lib/debug.ts", "../src/http-proxy/lib/http-proxy/common.js", "../src/http-proxy/lib/http-proxy/passes/web-outgoing.js", "../src/http-proxy/lib/http-proxy/passes/web-incoming.js", "../src/http-proxy/lib/http-proxy/passes/ws-incoming.js", "../src/http-proxy/lib/http-proxy/index.js", "../src/http-proxy/lib/http-proxy.js", "../src/http-proxy/index.js", "../src/index.ts", "../src/bin-path.ts", "../src/debug.ts", "../src/cypress-wrapper.ts", "../package.json", "../src/proxy.ts", "../src/enc.ts", "../src/interceptor.ts", "../src/cert.ts", "../src/network.ts", "../src/proxy-chain.ts", "../src/settings.ts", "../src/ca.ts"],
  "sourcesContent": ["import chalk from 'chalk';\nimport util from 'util';\n\nexport const warn = (...args: Parameters<typeof util.format>) =>\n  console.warn(chalk.bgYellow.black('\\n WARNING '), util.format(...args), '\\n');\n\nexport const error = (...args: Parameters<typeof util.format>) =>\n  console.warn(chalk.bgRed.black('\\n ERROR '), util.format(...args), '\\n');\n", "import { debug as _debug } from 'debug';\nexport const debugHttpProxy = _debug('cy2-http-proxy');\n", "var common = exports,\n  url = require('url'),\n  extend = require('util')._extend,\n  required = require('requires-port');\n\nvar upgradeHeader = /(^|,)\\s*upgrade\\s*($|,)/i,\n  isSSL = /^https|wss/;\n\n/**\n * Simple Regex for testing if protocol is https\n */\ncommon.isSSL = isSSL;\n/**\n * Copies the right headers from `options` and `req` to\n * `outgoing` which is then used to fire the proxied\n * request.\n *\n * Examples:\n *\n *    common.setupOutgoing(outgoing, options, req)\n *    // => { host: ..., hostname: ...}\n *\n * @param {Object} Outgoing Base object to be filled with required properties\n * @param {Object} Options Config object passed to the proxy\n * @param {ClientRequest} Req Request Object\n * @param {String} Forward String to select forward or target\n *\n * @return {Object} Outgoing Object with all required properties set\n *\n * @api private\n */\n\ncommon.setupOutgoing = function (outgoing, options, req, forward) {\n  const _options = { ...options };\n\n  // requests to api-proxy wouldn't be intercepted whatsoever\n  // route preflight requests to api.cypress.io and hope for their mercy\n  if (req.url === '/preflight') {\n    _options.target = new URL('https://api.cypress.io');\n  }\n  outgoing.port =\n    _options[forward || 'target'].port ||\n    (isSSL.test(_options[forward || 'target'].protocol) ? 443 : 80);\n\n  [\n    'host',\n    'hostname',\n    'socketPath',\n    'pfx',\n    'key',\n    'passphrase',\n    'cert',\n    'ca',\n    'ciphers',\n    'secureProtocol',\n  ].forEach(function (e) {\n    outgoing[e] = _options[forward || 'target'][e];\n  });\n\n  outgoing.method = _options.method || req.method;\n  outgoing.headers = extend({}, req.headers);\n\n  if (_options.headers) {\n    extend(outgoing.headers, _options.headers);\n  }\n\n  if (_options.auth) {\n    outgoing.auth = _options.auth;\n  }\n\n  if (_options.ca) {\n    outgoing.ca = _options.ca;\n  }\n\n  if (isSSL.test(_options[forward || 'target'].protocol)) {\n    outgoing.rejectUnauthorized =\n      typeof _options.secure === 'undefined' ? true : _options.secure;\n  }\n\n  outgoing.agent = _options.agent || false;\n  outgoing.localAddress = _options.localAddress;\n\n  //\n  // Remark: If we are false and not upgrading, set the connection: close. This is the right thing to do\n  // as node core doesn't handle this COMPLETELY properly yet.\n  //\n  if (!outgoing.agent) {\n    outgoing.headers = outgoing.headers || {};\n    if (\n      typeof outgoing.headers.connection !== 'string' ||\n      !upgradeHeader.test(outgoing.headers.connection)\n    ) {\n      outgoing.headers.connection = 'close';\n    }\n  }\n\n  // the final path is target path + relative path requested by user:\n  var target = _options[forward || 'target'];\n  var targetPath =\n    target && _options.prependPath !== false ? target.path || '' : '';\n\n  //\n  // Remark: Can we somehow not use url.parse as a perf optimization?\n  //\n  var outgoingPath = !_options.toProxy\n    ? url.parse(req.url).path || ''\n    : req.url;\n\n  //\n  // Remark: ignorePath will just straight up ignore whatever the request's\n  // path is. This can be labeled as FOOT-GUN material if you do not know what\n  // you are doing and are using conflicting options.\n  //\n  outgoingPath = !_options.ignorePath ? outgoingPath : '';\n\n  outgoing.path = common.urlJoin(targetPath, outgoingPath);\n\n  if (_options.changeOrigin) {\n    outgoing.headers.host =\n      required(outgoing.port, _options[forward || 'target'].protocol) &&\n      !hasPort(outgoing.host)\n        ? outgoing.host + ':' + outgoing.port\n        : outgoing.host;\n  }\n  return outgoing;\n};\n\n/**\n * Set the proper configuration for sockets,\n * set no delay and set keep alive, also set\n * the timeout to 0.\n *\n * Examples:\n *\n *    common.setupSocket(socket)\n *    // => Socket\n *\n * @param {Socket} Socket instance to setup\n *\n * @return {Socket} Return the configured socket.\n *\n * @api private\n */\n\ncommon.setupSocket = function (socket) {\n  socket.setTimeout(0);\n  socket.setNoDelay(true);\n\n  socket.setKeepAlive(true, 0);\n\n  return socket;\n};\n\n/**\n * Get the port number from the host. Or guess it based on the connection type.\n *\n * @param {Request} req Incoming HTTP request.\n *\n * @return {String} The port number.\n *\n * @api private\n */\ncommon.getPort = function (req) {\n  var res = req.headers.host ? req.headers.host.match(/:(\\d+)/) : '';\n\n  return res ? res[1] : common.hasEncryptedConnection(req) ? '443' : '80';\n};\n\n/**\n * Check if the request has an encrypted connection.\n *\n * @param {Request} req Incoming HTTP request.\n *\n * @return {Boolean} Whether the connection is encrypted or not.\n *\n * @api private\n */\ncommon.hasEncryptedConnection = function (req) {\n  return Boolean(req.connection.encrypted || req.connection.pair);\n};\n\n/**\n * OS-agnostic join (doesn't break on URLs like path.join does on Windows)>\n *\n * @return {String} The generated path.\n *\n * @api private\n */\n\ncommon.urlJoin = function () {\n  //\n  // We do not want to mess with the query string. All we want to touch is the path.\n  //\n  var args = Array.prototype.slice.call(arguments),\n    lastIndex = args.length - 1,\n    last = args[lastIndex],\n    lastSegs = last.split('?'),\n    retSegs;\n\n  args[lastIndex] = lastSegs.shift();\n\n  //\n  // Join all strings, but remove empty strings so we don't get extra slashes from\n  // joining e.g. ['', 'am']\n  //\n  retSegs = [\n    args\n      .filter(Boolean)\n      .join('/')\n      .replace(/\\/+/g, '/')\n      .replace('http:/', 'http://')\n      .replace('https:/', 'https://'),\n  ];\n\n  // Only join the query string if it exists so we don't have trailing a '?'\n  // on every request\n\n  // Handle case where there could be multiple ? in the URL.\n  retSegs.push.apply(retSegs, lastSegs);\n\n  return retSegs.join('?');\n};\n\n/**\n * Rewrites or removes the domain of a cookie header\n *\n * @param {String|Array} Header\n * @param {Object} Config, mapping of domain to rewritten domain.\n *                 '*' key to match any domain, null value to remove the domain.\n *\n * @api private\n */\ncommon.rewriteCookieProperty = function rewriteCookieProperty(\n  header,\n  config,\n  property\n) {\n  if (Array.isArray(header)) {\n    return header.map(function (headerElement) {\n      return rewriteCookieProperty(headerElement, config, property);\n    });\n  }\n  return header.replace(\n    new RegExp('(;\\\\s*' + property + '=)([^;]+)', 'i'),\n    function (match, prefix, previousValue) {\n      var newValue;\n      if (previousValue in config) {\n        newValue = config[previousValue];\n      } else if ('*' in config) {\n        newValue = config['*'];\n      } else {\n        //no match, return previous value\n        return match;\n      }\n      if (newValue) {\n        //replace value\n        return prefix + newValue;\n      } else {\n        //remove value\n        return '';\n      }\n    }\n  );\n};\n\n/**\n * Check the host and see if it potentially has a port in it (keep it simple)\n *\n * @returns {Boolean} Whether we have one or not\n *\n * @api private\n */\nfunction hasPort(host) {\n  return !!~host.indexOf(':');\n}\n", "var url    = require('url'),\n    common = require('../common');\n\n\nvar redirectRegex = /^201|30(1|2|7|8)$/;\n\n/*!\n * Array of passes.\n *\n * A `pass` is just a function that is executed on `req, res, options`\n * so that you can easily add new checks while still keeping the base\n * flexible.\n */\n\nmodule.exports = { // <--\n\n  /**\n   * If is a HTTP 1.0 request, remove chunk headers\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {proxyResponse} Res Response object from the proxy request\n   *\n   * @api private\n   */\n  removeChunked: function removeChunked(req, res, proxyRes) {\n    if (req.httpVersion === '1.0') {\n      delete proxyRes.headers['transfer-encoding'];\n    }\n  },\n\n  /**\n   * If is a HTTP 1.0 request, set the correct connection header\n   * or if connection header not present, then use `keep-alive`\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {proxyResponse} Res Response object from the proxy request\n   *\n   * @api private\n   */\n  setConnection: function setConnection(req, res, proxyRes) {\n    if (req.httpVersion === '1.0') {\n      proxyRes.headers.connection = req.headers.connection || 'close';\n    } else if (req.httpVersion !== '2.0' && !proxyRes.headers.connection) {\n      proxyRes.headers.connection = req.headers.connection || 'keep-alive';\n    }\n  },\n\n  setRedirectHostRewrite: function setRedirectHostRewrite(req, res, proxyRes, options) {\n    if ((options.hostRewrite || options.autoRewrite || options.protocolRewrite)\n        && proxyRes.headers['location']\n        && redirectRegex.test(proxyRes.statusCode)) {\n      var target = url.parse(options.target);\n      var u = url.parse(proxyRes.headers['location']);\n\n      // make sure the redirected host matches the target host before rewriting\n      if (target.host != u.host) {\n        return;\n      }\n\n      if (options.hostRewrite) {\n        u.host = options.hostRewrite;\n      } else if (options.autoRewrite) {\n        u.host = req.headers['host'];\n      }\n      if (options.protocolRewrite) {\n        u.protocol = options.protocolRewrite;\n      }\n\n      proxyRes.headers['location'] = u.format();\n    }\n  },\n  /**\n   * Copy headers from proxyResponse to response\n   * set each header in response object.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {proxyResponse} Res Response object from the proxy request\n   * @param {Object} Options options.cookieDomainRewrite: Config to rewrite cookie domain\n   *\n   * @api private\n   */\n  writeHeaders: function writeHeaders(req, res, proxyRes, options) {\n    var rewriteCookieDomainConfig = options.cookieDomainRewrite,\n        rewriteCookiePathConfig = options.cookiePathRewrite,\n        preserveHeaderKeyCase = options.preserveHeaderKeyCase,\n        rawHeaderKeyMap,\n        setHeader = function(key, header) {\n          if (header == undefined) return;\n          if (rewriteCookieDomainConfig && key.toLowerCase() === 'set-cookie') {\n            header = common.rewriteCookieProperty(header, rewriteCookieDomainConfig, 'domain');\n          }\n          if (rewriteCookiePathConfig && key.toLowerCase() === 'set-cookie') {\n            header = common.rewriteCookieProperty(header, rewriteCookiePathConfig, 'path');\n          }\n          res.setHeader(String(key).trim(), header);\n        };\n\n    if (typeof rewriteCookieDomainConfig === 'string') { //also test for ''\n      rewriteCookieDomainConfig = { '*': rewriteCookieDomainConfig };\n    }\n\n    if (typeof rewriteCookiePathConfig === 'string') { //also test for ''\n      rewriteCookiePathConfig = { '*': rewriteCookiePathConfig };\n    }\n\n    // message.rawHeaders is added in: v0.11.6\n    // https://nodejs.org/api/http.html#http_message_rawheaders\n    if (preserveHeaderKeyCase && proxyRes.rawHeaders != undefined) {\n      rawHeaderKeyMap = {};\n      for (var i = 0; i < proxyRes.rawHeaders.length; i += 2) {\n        var key = proxyRes.rawHeaders[i];\n        rawHeaderKeyMap[key.toLowerCase()] = key;\n      }\n    }\n\n    Object.keys(proxyRes.headers).forEach(function(key) {\n      var header = proxyRes.headers[key];\n      if (preserveHeaderKeyCase && rawHeaderKeyMap) {\n        key = rawHeaderKeyMap[key] || key;\n      }\n      setHeader(key, header);\n    });\n  },\n\n  /**\n   * Set the statusCode from the proxyResponse\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {proxyResponse} Res Response object from the proxy request\n   *\n   * @api private\n   */\n  writeStatusCode: function writeStatusCode(req, res, proxyRes) {\n    // From Node.js docs: response.writeHead(statusCode[, statusMessage][, headers])\n    if(proxyRes.statusMessage) {\n      res.statusCode = proxyRes.statusCode;\n      res.statusMessage = proxyRes.statusMessage;\n    } else {\n      res.statusCode = proxyRes.statusCode;\n    }\n  }\n\n};\n", "var httpNative = require('http'),\n  httpsNative = require('https'),\n  web_o = require('./web-outgoing'),\n  common = require('../common'),\n  followRedirects = require('follow-redirects');\n\nweb_o = Object.keys(web_o).map(function (pass) {\n  return web_o[pass];\n});\n\nvar nativeAgents = { http: httpNative, https: httpsNative };\n\n/*!\n * Array of passes.\n *\n * A `pass` is just a function that is executed on `req, res, options`\n * so that you can easily add new checks while still keeping the base\n * flexible.\n */\n\nmodule.exports = {\n  /**\n   * Sets `content-length` to '0' if request is of DELETE type.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  deleteLength: function deleteLength(req, res, options) {\n    if (\n      (req.method === 'DELETE' || req.method === 'OPTIONS') &&\n      !req.headers['content-length']\n    ) {\n      req.headers['content-length'] = '0';\n      delete req.headers['transfer-encoding'];\n    }\n  },\n\n  /**\n   * Sets timeout in request socket if it was specified in options.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  timeout: function timeout(req, res, options) {\n    if (options.timeout) {\n      req.socket.setTimeout(options.timeout);\n    }\n  },\n\n  /**\n   * Sets `x-forwarded-*` headers if specified in config.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  XHeaders: function XHeaders(req, res, options) {\n    if (!options.xfwd) return;\n\n    var encrypted = req.isSpdy || common.hasEncryptedConnection(req);\n    var values = {\n      for: req.connection.remoteAddress || req.socket.remoteAddress,\n      port: common.getPort(req),\n      proto: encrypted ? 'https' : 'http',\n    };\n\n    ['for', 'port', 'proto'].forEach(function (header) {\n      req.headers['x-forwarded-' + header] =\n        (req.headers['x-forwarded-' + header] || '') +\n        (req.headers['x-forwarded-' + header] ? ',' : '') +\n        values[header];\n    });\n\n    req.headers['x-forwarded-host'] =\n      req.headers['x-forwarded-host'] || req.headers['host'] || '';\n  },\n\n  /**\n   * Does the actual proxying. If `forward` is enabled fires up\n   * a ForwardStream, same happens for ProxyStream. The request\n   * just dies otherwise.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  stream: function stream(req, res, _options, _, server, clb) {\n    const options = { ..._options };\n    if (req.url === '/preflight') {\n      options.target = new URL('https://api.cypress.io');\n    }\n    // And we begin!\n    server.emit('start', req, res, options.target || options.forward);\n\n    var agents = options.followRedirects ? followRedirects : nativeAgents;\n    var http = agents.http;\n    var https = agents.https;\n\n    if (options.forward) {\n      // If forward enable, so just pipe the request\n      var forwardReq = (\n        options.forward.protocol === 'https:' ? https : http\n      ).request(\n        common.setupOutgoing(options.ssl || {}, options, req, 'forward')\n      );\n\n      // error handler (e.g. ECONNRESET, ECONNREFUSED)\n      // Handle errors on incoming request as well as it makes sense to\n      var forwardError = createErrorHandler(forwardReq, options.forward);\n      req.on('error', forwardError);\n      forwardReq.on('error', forwardError);\n\n      (options.buffer || req).pipe(forwardReq);\n      if (!options.target) {\n        return res.end();\n      }\n    }\n\n    // Request initalization\n    var proxyReq = (\n      options.target.protocol === 'https:' ? https : http\n    ).request(common.setupOutgoing(options.ssl || {}, options, req));\n\n    // Enable developers to modify the proxyReq before headers are sent\n    proxyReq.on('socket', function (socket) {\n      if (server && !proxyReq.getHeader('expect')) {\n        server.emit('proxyReq', proxyReq, req, res, options);\n      }\n    });\n\n    // allow outgoing socket to timeout so that we could\n    // show an error page at the initial request\n    if (options.proxyTimeout) {\n      proxyReq.setTimeout(options.proxyTimeout, function () {\n        proxyReq.abort();\n      });\n    }\n\n    // Ensure we abort proxy if request is aborted\n    req.on('aborted', function () {\n      proxyReq.abort();\n    });\n\n    // handle errors in proxy and incoming request, just like for forward proxy\n    var proxyError = createErrorHandler(proxyReq, options.target);\n    req.on('error', proxyError);\n    proxyReq.on('error', proxyError);\n\n    function createErrorHandler(proxyReq, url) {\n      return function proxyError(err) {\n        if (req.socket.destroyed && err.code === 'ECONNRESET') {\n          server.emit('econnreset', err, req, res, url);\n          return proxyReq.abort();\n        }\n\n        if (clb) {\n          clb(err, req, res, url);\n        } else {\n          server.emit('error', err, req, res, url);\n        }\n      };\n    }\n\n    (options.buffer || req).pipe(proxyReq);\n\n    proxyReq.on('response', function (proxyRes) {\n      if (server) {\n        server.emit('proxyRes', proxyRes, req, res);\n      }\n\n      if (!res.headersSent && !options.selfHandleResponse) {\n        for (var i = 0; i < web_o.length; i++) {\n          if (web_o[i](req, res, proxyRes, options)) {\n            break;\n          }\n        }\n      }\n\n      if (!res.finished) {\n        // Allow us to listen when the proxy has completed\n        proxyRes.on('end', function () {\n          if (server) server.emit('end', req, res, proxyRes);\n        });\n        // We pipe to the response unless its expected to be handled by the user\n        if (!options.selfHandleResponse) proxyRes.pipe(res);\n      } else {\n        if (server) server.emit('end', req, res, proxyRes);\n      }\n    });\n  },\n};\n", "var http   = require('http'),\n    https  = require('https'),\n    common = require('../common');\n\n/*!\n * Array of passes.\n *\n * A `pass` is just a function that is executed on `req, socket, options`\n * so that you can easily add new checks while still keeping the base\n * flexible.\n */\n\n/*\n * Websockets Passes\n *\n */\n\n\nmodule.exports = {\n  /**\n   * WebSocket requests must have the `GET` method and\n   * the `upgrade:websocket` header\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {Socket} Websocket\n   *\n   * @api private\n   */\n\n  checkMethodAndHeader : function checkMethodAndHeader(req, socket) {\n    if (req.method !== 'GET' || !req.headers.upgrade) {\n      socket.destroy();\n      return true;\n    }\n\n    if (req.headers.upgrade.toLowerCase() !== 'websocket') {\n      socket.destroy();\n      return true;\n    }\n  },\n\n  /**\n   * Sets `x-forwarded-*` headers if specified in config.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {Socket} Websocket\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  XHeaders : function XHeaders(req, socket, options) {\n    if(!options.xfwd) return;\n\n    var values = {\n      for  : req.connection.remoteAddress || req.socket.remoteAddress,\n      port : common.getPort(req),\n      proto: common.hasEncryptedConnection(req) ? 'wss' : 'ws'\n    };\n\n    ['for', 'port', 'proto'].forEach(function(header) {\n      req.headers['x-forwarded-' + header] =\n        (req.headers['x-forwarded-' + header] || '') +\n        (req.headers['x-forwarded-' + header] ? ',' : '') +\n        values[header];\n    });\n  },\n\n  /**\n   * Does the actual proxying. Make the request and upgrade it\n   * send the Switching Protocols request and pipe the sockets.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {Socket} Websocket\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n  stream : function stream(req, socket, options, head, server, clb) {\n\n    var createHttpHeader = function(line, headers) {\n      return Object.keys(headers).reduce(function (head, key) {\n        var value = headers[key];\n\n        if (!Array.isArray(value)) {\n          head.push(key + ': ' + value);\n          return head;\n        }\n\n        for (var i = 0; i < value.length; i++) {\n          head.push(key + ': ' + value[i]);\n        }\n        return head;\n      }, [line])\n      .join('\\r\\n') + '\\r\\n\\r\\n';\n    }\n\n    common.setupSocket(socket);\n\n    if (head && head.length) socket.unshift(head);\n\n\n    var proxyReq = (common.isSSL.test(options.target.protocol) ? https : http).request(\n      common.setupOutgoing(options.ssl || {}, options, req)\n    );\n\n    // Enable developers to modify the proxyReq before headers are sent\n    if (server) { server.emit('proxyReqWs', proxyReq, req, socket, options, head); }\n\n    // Error Handler\n    proxyReq.on('error', onOutgoingError);\n    proxyReq.on('response', function (res) {\n      // if upgrade event isn't going to happen, close the socket\n      if (!res.upgrade) {\n        socket.write(createHttpHeader('HTTP/' + res.httpVersion + ' ' + res.statusCode + ' ' + res.statusMessage, res.headers));\n        res.pipe(socket);\n      }\n    });\n\n    proxyReq.on('upgrade', function(proxyRes, proxySocket, proxyHead) {\n      proxySocket.on('error', onOutgoingError);\n\n      // Allow us to listen when the websocket has completed\n      proxySocket.on('end', function () {\n        server.emit('close', proxyRes, proxySocket, proxyHead);\n      });\n\n      // The pipe below will end proxySocket if socket closes cleanly, but not\n      // if it errors (eg, vanishes from the net and starts returning\n      // EHOSTUNREACH). We need to do that explicitly.\n      socket.on('error', function () {\n        proxySocket.end();\n      });\n\n      common.setupSocket(proxySocket);\n\n      if (proxyHead && proxyHead.length) proxySocket.unshift(proxyHead);\n\n      //\n      // Remark: Handle writing the headers to the socket when switching protocols\n      // Also handles when a header is an array\n      //\n      socket.write(createHttpHeader('HTTP/1.1 101 Switching Protocols', proxyRes.headers));\n\n      proxySocket.pipe(socket).pipe(proxySocket);\n\n      server.emit('open', proxySocket);\n      server.emit('proxySocket', proxySocket);  //DEPRECATED.\n    });\n\n    return proxyReq.end(); // XXX: CHECK IF THIS IS THIS CORRECT\n\n    function onOutgoingError(err) {\n      if (clb) {\n        clb(err, req, socket);\n      } else {\n        server.emit('error', err, req, socket);\n      }\n      socket.end();\n    }\n  }\n};\n", "const { debugHttpProxy } = require('../debug');\nconst { error } = require('../../../log');\nconst { omit, pick, isUndefined } = require('lodash');\nconst httpProxy = module.exports,\n  extend = require('util')._extend,\n  parse_url = require('url').parse,\n  EE3 = require('eventemitter3'),\n  http = require('http'),\n  https = require('https'),\n  web = require('./passes/web-incoming'),\n  ws = require('./passes/ws-incoming');\n\nhttpProxy.Server = ProxyServer;\n\n/**\n * Returns a function that creates the loader for\n * either `ws` or `web`'s  passes.\n *\n * Examples:\n *\n *    httpProxy.createRightProxy('ws')\n *    // => [Function]\n *\n * @param {String} Type Either 'ws' or 'web'\n *\n * @return {Function} Loader Function that when called returns an iterator for the right passes\n *\n * @api private\n */\n\nfunction createRightProxy(type) {\n  return function createProxyWithType(options) {\n    return function applyProxyPasses(req, res /*, [head], [opts] */) {\n      var passes = type === 'ws' ? this.wsPasses : this.webPasses,\n        args = [].slice.call(arguments),\n        cntr = args.length - 1,\n        head,\n        cbl;\n\n      /* optional args parse begin */\n      if (typeof args[cntr] === 'function') {\n        cbl = args[cntr];\n\n        cntr--;\n      }\n\n      var requestOptions = options;\n      if (!(args[cntr] instanceof Buffer) && args[cntr] !== res) {\n        //Copy global options\n        requestOptions = extend({}, options);\n        //Overwrite with request options\n        extend(requestOptions, args[cntr]);\n\n        cntr--;\n      }\n\n      if (args[cntr] instanceof Buffer) {\n        head = args[cntr];\n      }\n      /* optional args parse end */\n\n      ['target', 'forward'].forEach(function (e) {\n        if (typeof requestOptions[e] === 'string')\n          requestOptions[e] = parse_url(requestOptions[e]);\n      });\n\n      // target and forward are the same\n      if (!requestOptions.target && !requestOptions.forward) {\n        return this.emit(\n          'error',\n          new Error('Must provide a proper URL as target')\n        );\n      }\n\n      if (isUndefined(passes?.length)) {\n        error(\n          'Unexpected error processing the request. Please report the issue and the details below. Set environment variable DEBUG=cy2* and rerun to get more information'\n        );\n        console.error(\n          'Request: %o',\n          pick(\n            req,\n            'httpVersion',\n            'method',\n            'url',\n            'headers',\n            'upgrade',\n            'aborted',\n            'complete'\n          )\n        );\n        console.error(\n          'Proxy: type %s, request options: %O',\n          type,\n          omit(requestOptions, 'ssl')\n        );\n      }\n\n      debugHttpProxy(\n        'applying passes, proxy type: %s, request options: %o',\n        type,\n        omit(requestOptions, 'ssl')\n      );\n      debugHttpProxy(\n        'Request: %o',\n        pick(\n          req,\n          'httpVersion',\n          'method',\n          'url',\n          'headers',\n          'upgrade',\n          'aborted',\n          'complete'\n        )\n      );\n\n      // passes are functions that modify request/response objects\n      for (var i = 0; i < passes.length; i++) {\n        /**\n         * Call of passes functions\n         * pass(req, res, options, head)\n         *\n         * In WebSockets case the `res` variable\n         * refer to the connection socket\n         * pass(req, socket, options, head)\n         */\n        if (passes[i](req, res, requestOptions, head, this, cbl)) {\n          // passes can return a truthy value to halt the loop\n          debugHttpProxy(\n            'pass halted the loop type \"%s\", #%d: %s %s',\n            type,\n            i,\n            passes[i].name,\n            req.method,\n            req.url\n          );\n          break;\n        }\n      }\n    };\n  };\n}\nhttpProxy.createRightProxy = createRightProxy;\n\nfunction ProxyServer(options) {\n  EE3.call(this);\n\n  options = options || {};\n  options.prependPath = options.prependPath === false ? false : true;\n\n  this.web = this.proxyRequest = createRightProxy('web')(options);\n  this.ws = this.proxyWebsocketRequest = createRightProxy('ws')(options);\n  this.options = options;\n\n  this.webPasses = Object.keys(web).map(function (pass) {\n    return web[pass];\n  });\n\n  this.wsPasses = Object.keys(ws).map(function (pass) {\n    return ws[pass];\n  });\n\n  this.on('error', this.onError, this);\n}\n\nrequire('util').inherits(ProxyServer, EE3);\n\nProxyServer.prototype.onError = function (err) {\n  //\n  // Remark: Replicate node core behavior using EE3\n  // so we force people to handle their own errors\n  //\n  if (this.listeners('error').length === 1) {\n    throw err;\n  }\n};\n\nProxyServer.prototype.listen = function (port, hostname, callback) {\n  var self = this,\n    closure = function (req, res) {\n      self.web(req, res);\n    };\n\n  this._server = this.options.ssl\n    ? https.createServer(this.options.ssl, closure)\n    : http.createServer(closure);\n\n  if (this.options.ws) {\n    this._server.on('upgrade', function (req, socket, head) {\n      self.ws(req, socket, head);\n    });\n  }\n\n  this._server.listen(port, hostname, callback);\n\n  return this;\n};\n\nProxyServer.prototype.close = function (callback) {\n  var self = this;\n  if (this._server) {\n    this._server.close(done);\n  }\n\n  // Wrap callback to nullify server after all open connections are closed.\n  function done() {\n    self._server = null;\n    if (callback) {\n      callback.apply(null, arguments);\n    }\n  }\n};\n\nProxyServer.prototype.before = function (type, passName, callback) {\n  if (type !== 'ws' && type !== 'web') {\n    throw new Error('type must be `web` or `ws`');\n  }\n  var passes = type === 'ws' ? this.wsPasses : this.webPasses,\n    i = false;\n\n  passes.forEach(function (v, idx) {\n    if (v.name === passName) i = idx;\n  });\n\n  if (i === false) throw new Error('No such pass');\n\n  passes.splice(i, 0, callback);\n};\nProxyServer.prototype.after = function (type, passName, callback) {\n  if (type !== 'ws' && type !== 'web') {\n    throw new Error('type must be `web` or `ws`');\n  }\n  var passes = type === 'ws' ? this.wsPasses : this.webPasses,\n    i = false;\n\n  passes.forEach(function (v, idx) {\n    if (v.name === passName) i = idx;\n  });\n\n  if (i === false) throw new Error('No such pass');\n\n  passes.splice(i++, 0, callback);\n};\n", "// Use explicit /index.js to help browserify negociation in require '/lib/http-proxy' (!)\nconst ProxyServer = require('./http-proxy/index.js').Server;\n\n/**\n * Creates the proxy server.\n *\n * Examples:\n *\n *    httpProxy.createProxyServer({ .. }, 8000)\n *    // => '{ web: [Function], ws: [Function] ... }'\n *\n * @param {Object} Options Config object passed to the proxy\n *\n * @return {Object} Proxy Proxy object with handlers for `ws` and `web` requests\n *\n * @api public\n */\n\nfunction createProxyServer(options) {\n  /*\n   *  `options` is needed and it must have the following layout:\n   *\n   *  {\n   *    target : <url string to be parsed with the url module>\n   *    forward: <url string to be parsed with the url module>\n   *    agent  : <object to be passed to http(s).request>\n   *    ssl    : <object to be passed to https.createServer()>\n   *    ws     : <true/false, if you want to proxy websockets>\n   *    xfwd   : <true/false, adds x-forward headers>\n   *    secure : <true/false, verify SSL certificate>\n   *    toProxy: <true/false, explicitly specify if we are proxying to another proxy>\n   *    prependPath: <true/false, Default: true - specify whether you want to prepend the target's path to the proxy path>\n   *    ignorePath: <true/false, Default: false - specify whether you want to ignore the proxy path of the incoming request>\n   *    localAddress : <Local interface string to bind for outgoing connections>\n   *    changeOrigin: <true/false, Default: false - changes the origin of the host header to the target URL>\n   *    preserveHeaderKeyCase: <true/false, Default: false - specify whether you want to keep letter case of response header key >\n   *    auth   : Basic authentication i.e. 'user:password' to compute an Authorization header.\n   *    hostRewrite: rewrites the location hostname on (201/301/302/307/308) redirects, Default: null.\n   *    autoRewrite: rewrites the location host/port on (201/301/302/307/308) redirects based on requested host/port. Default: false.\n   *    protocolRewrite: rewrites the location protocol on (201/301/302/307/308) redirects to 'http' or 'https'. Default: null.\n   *  }\n   *\n   *  NOTE: `options.ws` and `options.ssl` are optional.\n   *    `options.target and `options.forward` cannot be\n   *    both missing\n   *  }\n   */\n\n  return new ProxyServer(options);\n}\n\nProxyServer.createProxyServer = createProxyServer;\nProxyServer.createServer = createProxyServer;\nProxyServer.createProxy = createProxyServer;\n\n/**\n * Export the proxy \"Server\" as the main export.\n */\nmodule.exports = ProxyServer;\n", "// export { default as createProxyServer } from './lib/http-proxy';\nmodule.exports = require('./lib/http-proxy');\n", "/*! \ncy2 - Integrate Cypress with alternative cloud services like Sorry Cypress or Currents\nCopyright (C) 2023 Andrew Goldis (agoldis@gmail.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport 'source-map-support/register';\n\nexport { getCypressCLIBinPath } from './bin-path';\nexport { run, spawn } from './cypress-wrapper';\n", "import { dirname, resolve } from 'path';\nimport { debug } from './debug';\nimport { error } from './log';\n\nexport async function getCypressCLIBinPath(): Promise<string> {\n  if (process.env.CYPRESS_PACKAGE_SHELL_SCRIPT) {\n    debug(\n      'Cypress binary path from CYPRESS_PACKAGE_SHELL_SCRIPT: %s',\n      process.env.CYPRESS_PACKAGE_SHELL_SCRIPT\n    );\n    return process.env.CYPRESS_PACKAGE_SHELL_SCRIPT;\n  }\n\n  try {\n    const cypressPath = require.resolve('cypress');\n    const cypress = require('cypress/package.json');\n\n    if (!cypress.bin || !cypress.bin?.cypress) {\n      throw new Error('Cannot detect cypress package executable');\n    }\n    const result = resolve(dirname(cypressPath), cypress.bin.cypress);\n    debug('Cypress binary path: %s', result);\n\n    if (!result) {\n      throw new Error('Cannot detect cypress package executable');\n    }\n    return result;\n  } catch (err) {\n    error(\n      'Cannot detect cypress package executable. Consider using CYPRESS_PACKAGE_SHELL_SCRIPT environment variable. Tried locations: %O',\n      require.resolve.paths('cypress')\n    );\n    throw err;\n  }\n}\n", "import { debug as _debug } from 'debug';\nexport const debug = _debug('cy2');\nexport const debugNet = _debug('cy2-net');\n", "/// <reference types=\"node\" />\n/// <reference types=\"cypress\" />\n\nimport cp from 'child_process';\nimport { platform } from 'os';\nimport packageJson from '../package.json';\nimport { getCypressCLIBinPath } from './bin-path';\nimport { debug } from './debug';\nimport { startProxy } from './proxy';\n\nimport {\n  getEnvOverrides,\n  getSanitizedEnvironment,\n  getSettings,\n  getUpstreamProxy,\n  overrideProcessEnv,\n} from './settings';\n\n/**\n * Spawn Cypress as a child process, inherit all the flags and environment variables.\n *\n * @param apiUrl orchestration service URL\n */\nexport async function spawn(apiUrl: string) {\n  debug('Cypress API URL: %s', apiUrl);\n  debug('Package version: %s', packageJson.version);\n\n  const [, , ...rest] = process.argv;\n  const cliBinPath = await getCypressCLIBinPath();\n\n  const isWindows = platform() === 'win32';\n  const cmd = isWindows ? 'node' : cliBinPath;\n  const args = isWindows ? [cliBinPath, ...rest] : rest;\n\n  debug('Running cypress: %o', [cmd, ...args]);\n  const envVariables = getSanitizedEnvironment();\n  const upstreamProxy = getUpstreamProxy(envVariables);\n  const { port } = await startProxy({\n    target: apiUrl,\n    upstreamProxy,\n    envVariables,\n  });\n\n  cp.spawn(cmd, args, {\n    stdio: 'inherit',\n    env: {\n      ...process.env,\n      ...getEnvOverrides(getSettings({ port }), envVariables),\n    },\n  }).on('exit', (code) => {\n    process.exit(code ?? 1);\n  });\n}\n\n/**\n * Run Cypress via {@link https://docs.cypress.io/guides/guides/module-api| Module API}\n *\n * @param apiUrl orchestration service URL\n * @param config Cypress.run {@link https://docs.cypress.io/guides/guides/module-api#Options| options}\n * @returns Cypress {@link https://docs.cypress.io/guides/guides/module-api#Results| run results}\n */\nexport async function run(\n  apiUrl: string,\n  config?: Partial<CypressCommandLine.CypressRunOptions>\n): Promise<\n  | CypressCommandLine.CypressRunResult\n  | CypressCommandLine.CypressFailedRunResult\n> {\n  debug('Cypress API URL: %s', apiUrl);\n  debug('Package version: %s', packageJson.version);\n\n  if (!apiUrl) {\n    throw new Error('Missing API URL');\n  }\n  // use inline import, otherwise it can throw when importing for \"spawn\"\n  const cypress = require('cypress');\n\n  const originalEnv = { ...process.env };\n  const envVariables = getSanitizedEnvironment();\n  const upstreamProxy = getUpstreamProxy(envVariables);\n  const { port, stop } = await startProxy({\n    target: apiUrl,\n    upstreamProxy,\n    envVariables,\n  });\n  try {\n    overrideProcessEnv(getEnvOverrides(getSettings({ port }), envVariables));\n    return await cypress.run(config);\n  } finally {\n    process.env = originalEnv;\n    await stop();\n  }\n}\n", "{\n  \"name\": \"cy2\",\n  \"version\": \"4.0.8\",\n  \"author\": \"Andrew Goldis\",\n  \"main\": \"./dist\",\n  \"typings\": \"./dist\",\n  \"license\": \"GPL-3.0-or-later\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/sorry-cypress/cy2.git\"\n  },\n  \"scripts\": {\n    \"postinstall\": \"patch-package\",\n    \"build\": \"run-p tsc esbuild\",\n    \"dev\": \"run-p watch:*\",\n    \"test\": \"jest\",\n    \"tsc\": \"tsc\",\n    \"esbuild\": \"node ./build.js\",\n    \"watch:tsc\": \"run-s \\\"tsc --watch --preserveWatchOutput\\\"\",\n    \"watch:esbuild\": \"esbuild ./src/*.ts --bundle --platform=node --target=node14 --packages=external --sourcemap=inline --outdir=dist --watch\",\n    \"build-tunnel\": \"esbuild ./src/tunnel-proxy.ts --bundle --platform=node --target=node14 --packages=external --sourcemap=inline --outdir=dist\",\n    \"release\": \"release-it\",\n    \"release-ci\": \"release-it --ci --npm.skipChecks --no-git --no-github --no-increment --npm.publish\",\n    \"clean\": \"rimraf dist\"\n  },\n  \"files\": [\n    \"bin/*\",\n    \"dist/index.js*\",\n    \"!dist/__tests__\",\n    \"!dist/*.d.ts\",\n    \"!dist/**/*.d.ts\",\n    \"dist/index.d.ts\",\n    \"dist/cypress-wrapper.d.ts\",\n    \"dist/bin-path.d.ts\"\n  ],\n  \"bin\": {\n    \"cy2\": \"bin/cy2\"\n  },\n  \"engines\": {\n    \"node\": \">=14.17.0\"\n  },\n  \"keywords\": [\n    \"cypress\",\n    \"sorry-cypress\",\n    \"cypress dashboard\",\n    \"cypress ci\",\n    \"cypress parallel\",\n    \"currents\"\n  ],\n  \"dependencies\": {\n    \"chalk\": \"^4.1.2\",\n    \"eventemitter3\": \"^4.0.0\",\n    \"follow-redirects\": \"^1.0.0\",\n    \"fp-ts\": \"^2.13.1\",\n    \"http-terminator\": \"^3.2.0\",\n    \"https-proxy-agent\": \"^5.0.1\",\n    \"lodash\": \"^4.17.21\",\n    \"micromatch\": \"^4.0.5\",\n    \"patch-package\": \"^6.5.1\",\n    \"requires-port\": \"^1.0.0\",\n    \"source-map-support\": \"^0.5.21\",\n    \"tmp\": \"^0.2.1\"\n  },\n  \"devDependencies\": {\n    \"@release-it/conventional-changelog\": \"^5.1.1\",\n    \"@types/http-proxy\": \"^1.17.9\",\n    \"@types/jest\": \"^27.0.1\",\n    \"@types/lodash\": \"^4.14.191\",\n    \"@types/micromatch\": \"^4.0.2\",\n    \"@types/node\": \"^18.11.17\",\n    \"cypress\": \">=6.7.0\",\n    \"devcert\": \"^1.2.2\",\n    \"esbuild\": \"^0.16.13\",\n    \"jest\": \"^29.3.1\",\n    \"npm-run-all\": \"^4.1.5\",\n    \"release-it\": \"^15.6.0\",\n    \"rimraf\": \"^3.0.2\",\n    \"ts-jest\": \"^29.0.3\",\n    \"typescript\": \"^4.9.4\"\n  },\n  \"release-it\": {\n    \"npm\": {\n      \"publish\": false\n    },\n    \"github\": {\n      \"release\": true\n    },\n    \"plugins\": {\n      \"@release-it/conventional-changelog\": {\n        \"preset\": \"angular\",\n        \"header\": \"# Changelog\",\n        \"ignoreVersion\": true,\n        \"infile\": \"CHANGELOG.md\"\n      }\n    },\n    \"git\": {\n      \"commitMessage\": \"chore: release v${version}\"\n    },\n    \"hooks\": {\n      \"before:init\": \"run-s clean build\"\n    }\n  },\n  \"prettier\": {\n    \"singleQuote\": true\n  }\n}\n", "import * as a from 'fp-ts/Array';\nimport { pipe } from 'fp-ts/function';\nimport * as o from 'fp-ts/Option';\nimport http from 'http';\nimport { createHttpTerminator } from 'http-terminator';\nimport { isMatch } from 'micromatch';\nimport net from 'net';\nimport { debugNet } from './debug';\nimport { enc } from './enc';\nimport {\n  getDirectInterceptor,\n  getUpstreamInterceptor,\n  stopInterceptors,\n} from './interceptor';\nimport {\n  pipeSocketToLocalPort,\n  pipeSocketToRemoteDestination,\n} from './network';\nimport { runProxyChain } from './proxy-chain';\nimport { getSanitizedEnvironment } from './settings';\n\nexport interface Proxy {\n  stop: () => Promise<void>;\n  port: number;\n}\nexport async function startProxy({\n  target = 'https://cy.currents.dev',\n  upstreamProxy = null,\n  envVariables = {},\n}: {\n  target: string;\n  upstreamProxy: URL | null;\n  envVariables: Partial<ReturnType<typeof getSanitizedEnvironment>>;\n}): Promise<Proxy> {\n  return new Promise((resolve, reject) => {\n    const onConnect = getOnConnect(\n      upstreamProxy,\n      target,\n      envVariables.NO_PROXY?.split(',')\n    );\n\n    const proxy = http.createServer();\n    const httpTerminator = createHttpTerminator({\n      server: proxy,\n    });\n\n    async function stopProxy(): Promise<void> {\n      debugNet('Stopping proxy');\n      await httpTerminator.terminate();\n    }\n\n    proxy.on('connect', onConnect).listen(0, () => {\n      const address = proxy.address();\n      if (!isAddress(address)) {\n        reject(new Error('Unable to detect proxy address'));\n        return;\n      }\n\n      debugNet('Proxy is listening on port %d', address.port);\n      resolve({\n        stop: async () => {\n          await stopInterceptors();\n          await stopProxy();\n          debugNet('Stopped proxy + interceptors');\n        },\n        port: address.port,\n      });\n      return;\n    });\n  });\n}\n\nconst getOnConnect = (\n  upstreamProxy: URL | null,\n  target: string,\n  noProxy: string[] = []\n) =>\n  function onConnect(req: http.IncomingMessage, socket: net.Socket) {\n    debugNet('Connection request: %s', req.url);\n\n    if (!req.url) {\n      throw new Error('Missing req.url in connect handler');\n    }\n\n    const [hostname, port] = req.url.split(':', 2);\n\n    if (shouldIntercept(hostname)) {\n      interceptRequest({ target, hostname, socket, upstreamProxy, noProxy });\n      return;\n    }\n\n    if (upstreamProxy && shouldUseUpstreamProxy(hostname, noProxy)) {\n      runProxyChain(req, socket, upstreamProxy);\n      return;\n    }\n\n    pipeSocketToRemoteDestination({\n      socket,\n      port: parseInt(port, 10),\n      hostname,\n    });\n    return;\n  };\n\nasync function interceptRequest({\n  target,\n  hostname,\n  socket,\n  upstreamProxy = null,\n  noProxy = [],\n}: {\n  target: string;\n  hostname: string;\n  socket: net.Socket;\n  upstreamProxy: URL | null;\n  noProxy: string[];\n}) {\n  const interceptor = await pipe(\n    upstreamProxy,\n    o.fromNullable,\n    o.filter(() => shouldUseUpstreamProxy(new URL(target).hostname, noProxy)),\n    o.map((upstreamProxy) => getUpstreamInterceptor({ upstreamProxy, target })),\n    o.getOrElse(() => getDirectInterceptor({ target }))\n  );\n\n  // @ts-ignore\n  const port = interceptor._server.address().port;\n  debugNet('Intercepting request to \"%s\" via port: %d', hostname, port);\n  pipeSocketToLocalPort({ socket, port });\n}\n\nfunction shouldUseUpstreamProxy(hostname: string, noProxy: string[] = []) {\n  const result = a.isEmpty(noProxy) ? true : !isMatch(hostname, noProxy);\n  debugNet(\n    'Should \"%s\" use upstream proxy with NO_PROXY %s: %s',\n    hostname,\n    noProxy,\n    result\n  );\n  return result;\n}\n\nfunction shouldIntercept(hostname: string) {\n  return hostname === enc('YXBpLmN5cHJlc3MuaW8=');\n}\n\nfunction isAddress(value: unknown): value is net.AddressInfo {\n  return typeof value === 'object' && value !== null;\n}\n", "export const enc = (s: string, e: 'base64' = 'base64') =>\n  Buffer.from(s, e).toString();\n", "import type httpProxyType from 'http-proxy';\nimport { HttpsProxyAgent } from 'https-proxy-agent';\nimport { cert, key } from './cert';\nimport { debugNet } from './debug';\nimport * as httpProxy from './http-proxy';\nimport { warn } from './log';\n\nconst inteceptors = new Map<'upstream' | 'direct', httpProxyType>();\n\nexport async function stopInterceptors() {\n  debugNet('Stopping interceptors');\n  await Promise.all(\n    Array.from(inteceptors.values()).map(\n      (interceptor, i, all): Promise<void> =>\n        new Promise((resolve) =>\n          interceptor.close(() => {\n            debugNet('Stopped interceptor %d/%d', i + 1, all.length);\n            resolve();\n          })\n        )\n    )\n  );\n  inteceptors.clear();\n}\n\nexport async function getUpstreamInterceptor({\n  target,\n  upstreamProxy,\n}: {\n  target: string;\n  upstreamProxy: URL;\n}) {\n  if (inteceptors.has('upstream')) {\n    debugNet(\n      'Using interceptor with upstream routing',\n      upstreamProxy.toString(),\n      target\n    );\n    return inteceptors.get('upstream');\n  }\n  debugNet(\n    'Creating interceptor with upstream routing path: %s -> %s',\n    upstreamProxy.toString(),\n    target\n  );\n  const agent = new HttpsProxyAgent({\n    protocol: upstreamProxy.protocol, // connect to upstreamProxy over https\n    host: upstreamProxy.hostname,\n    port: upstreamProxy.port,\n    path: upstreamProxy.pathname,\n  });\n\n  inteceptors.set(\n    'upstream',\n    await createInterceptor({\n      target,\n      agent,\n    })\n  );\n  return inteceptors.get('upstream');\n}\n\nexport async function getDirectInterceptor({\n  target,\n}: {\n  target: string;\n}): Promise<httpProxyType> {\n  if (inteceptors.has('direct')) {\n    debugNet('Using interceptor with direct routing');\n    return inteceptors.get('direct') as httpProxyType;\n  }\n  debugNet('Creating interceptor with direct routing path: %s', target);\n  inteceptors.set(\n    'direct',\n    await createInterceptor({\n      target,\n    })\n  );\n  return inteceptors.get('direct') as httpProxyType;\n}\n\nfunction createInterceptor({\n  target,\n  agent,\n}: {\n  target: string;\n  agent?: HttpsProxyAgent;\n}): Promise<httpProxyType> {\n  return new Promise((resolve) => {\n    debugNet('Creating interceptor for %s', target);\n    const i = httpProxy\n      // @ts-ignore\n      .createProxyServer({\n        target,\n        changeOrigin: true,\n        followRedirects: true,\n        agent,\n        secure: false,\n        ssl: {\n          key,\n          cert,\n        },\n      })\n      .on('error', (err) => {\n        const type = Boolean(agent) ? 'upstream proxy' : 'direct';\n        debugNet('Interceptor of type %s error: %s', type, err);\n        warn('Error connecting to %s: %s', target, err.message);\n      });\n\n    i.listen(0, undefined, () => resolve(i));\n  });\n}\n", "export const cert = `-----BEGIN CERTIFICATE-----\nMIIEWjCCAkICFDtuRdVQgEMC2Gc8tSvZR97D+bKJMA0GCSqGSIb3DQEBCwUAMHUx\nCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNj\nbzERMA8GA1UECgwISGVsbG9IdWIxFTATBgNVBAsMDEhlbGxvSHViIERldjEXMBUG\nA1UEAwwOYXBpLmN5cHJlc3MuaW8wHhcNMjMxMjA4MTIzMDU0WhcNMjgxMjA2MTIz\nMDU0WjBeMQswCQYDVQQGEwJBVTETMBEGA1UECAwKU29tZS1TdGF0ZTEhMB8GA1UE\nCgwYSW50ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMRcwFQYDVQQDDA5hcGkuY3lwcmVz\ncy5pbzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALn3KlQp6FQz3QM1\nLEsmqYo/qlfAjPfh7IQDkOl7xMfZ809yCIQURbgEWDAnlpQqxVd01gp4F5wd7QUc\nJWY1CVMjjJr61WXo8XTaV5hn8c8H1ABETzRYYlkKC+Ht7jtkqKWG6PCI4+YXNgT0\nhlmI9NtDHQzzwLrm7GY6eV+AFumTshxrZs/JSuXf3vhCqoMviOtVpD++iMx/q/uD\neVVMSs2aWW47RWKaVNiSrHev6Vf6pcvaqawZ9TJBeD6q8nlgTWL+iMyOS9HGptX7\no6USHaK1j09NrRjbPUMo29m/5mssG7+9+Jjfa+riCIPyfUgZIz/whvmqt7OP442e\nOsqynQkCAwEAATANBgkqhkiG9w0BAQsFAAOCAgEAJfBt3FhgSkWFoquy29lZ2kkP\n8EAztk4W4OOmKAjvN2aF08rxIaxOiCJaTAVnoG0PbLMDlsj1V2ttUqoD/Cv5gHO2\nIajS5LXEcb+ij/HwhYbQg7YKE/xPbjR4oXtBsHiU1f0k6sPBsBHHaTxQ0drO+ItA\nLCCMNDX43lVziV46FDgXRnP/YMS8waSmt9up1hKdrBQ537+8J/RtLa7FYoih3E9L\n5nA77Y1zWwneRAzW1U7WwTk0iXm6IMd3Y1dSG4jS75o9pAdHvxphXNeZWPgNOw6D\nI6dMrRoIKhpQDojS+wczZOljcnw8yYBVSdRaXbqjgl5VV0jAenc91hlFYy4W/lXx\nXqklUVUHoXpboPHaad7495/U7l21Ghju5Pd+B5mQPqOrYao3hOtKxFPFbVu4Fol8\nHxahKL7WeX2IqON8LTLe/SZPBlIpQV+ODtcszb0CMpAomosdc5Y+IWsg6UtuDB12\nm4b/+R+l3bJpcDfX4Qkq3vrYAD0ihr7cMAzZkC20Z1/Svoj5M2iwwxs/Q3n8r5jQ\nkaq0rvoyoFfwJ7E39WH05Bu0N04SlbuV+Bmx9bCTbMblKjeTpL5gt5smASnlPj0i\nyj6LqpnE9P1lkIn1V4zOWvVmmWASYDIVyA45NA4ZzL+qgvulJAmvELC8UbcviPOr\ngCiHabEEIkljimSrSlA=\n-----END CERTIFICATE-----`;\n\nexport const key = `-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC59ypUKehUM90D\nNSxLJqmKP6pXwIz34eyEA5Dpe8TH2fNPcgiEFEW4BFgwJ5aUKsVXdNYKeBecHe0F\nHCVmNQlTI4ya+tVl6PF02leYZ/HPB9QARE80WGJZCgvh7e47ZKilhujwiOPmFzYE\n9IZZiPTbQx0M88C65uxmOnlfgBbpk7Ica2bPyUrl3974QqqDL4jrVaQ/vojMf6v7\ng3lVTErNmlluO0VimlTYkqx3r+lX+qXL2qmsGfUyQXg+qvJ5YE1i/ojMjkvRxqbV\n+6OlEh2itY9PTa0Y2z1DKNvZv+ZrLBu/vfiY32vq4giD8n1IGSM/8Ib5qrezj+ON\nnjrKsp0JAgMBAAECggEAGpf5+ac0jjYMeRT1jJmuzRJlrb7faeNpC0fnRTxp25qT\nbN0F0r2DatlUMy62HeIv7l3K7hxWZADzkDOCNaeH+devl8ofEj/Jp8hBlo3mypB4\nBMHAAeBR0CHbqSd5Vg0DAQjV7u/kh1byZqsBO3SWb3SdhuikuxWi4Muj58BNhoFV\niVRiwX4oG3eWlI/jd2TOp8ltOwxx/X+YZXyyBiYgW8eaoGpZlRt1wF2sUDvZOu3e\nw+kax56J2ViipBKksvUvRF1O7j21T+/X2WShzAIqcpC6CcfKDGNnj2WNJn2NdBWF\n1D8uzOoBtfR70w5V1qL2FEuYHptEbiEL+AjhbTo9cQKBgQD6sAhypIqgBZ7nXhi2\nALI64kSccRUSs0vWn291GKOPR+pcLjJNEGrLYBvCxs5BfLjbS9zdyxoa8ARyB1Jl\nyc61ISgcp9oBDZI4DWqUshd1PzWr+17yc6n62CuJ9ZDVlIgrRmESVGDRrm/r2aQ7\n/dEAa4Kpf/+wIzLzEnct9BvMawKBgQC96ASoninBOvMB+lsfQCkCFRVDj3aEW88K\n3knJYGIwtTegYJF+EnUq9sljB02Q8eYTAESiOv64SBIVtkXYQEn3taOikWbycCar\n76tNpddoj1YGOR0PiWZ4pPoi6F8IfWbPUchUZo/nRECtVxk9HJas9PGDmiKyhS2S\nYJQpoC+ZWwKBgGVV21RcZx0gqIdmZh7MUT+0T3/dxmL0z2dGs8tl1lgI/hedJQA5\n7rGffBlUO/QE8sTS+ck+XKMe+u0NQKWc2k4lxQ0wXNOoJL87zSWmiA0BLDUFO/BO\nCRw5XgA6n/12OUUlAgBi03BvTxbLt7P4eg/tZbgW4cjVsbbIdBzDXKlZAoGACPH3\n3jVtBBQRxEMVrbgo9lcl5EPKsltcukdUNG8c0OyITT6fO9AEwtxTCh4a8jviuXxm\nvzmGLAoBCBLI4XHNyiQ9K/grYDoWKD0m1YZ9SgiOZcak7slrET28Jo7Jgy3c/OD+\nTbNzDdKyNTgIEU/abRUwlyFYhw4s4ls4P2mzNEcCgYEAlrNQZpCHoHBEKWCk7OFW\nBcWoAyWtptVtRVqI7X0MT0MmuHeLir5IR9pKH+2b5edoPINpPjwcfDY8Odm2R2tv\nk5k/80o0az9SYGNAufn855OcSYZyzQvf0TIiaN7PVSuO3FQeN/XlUyim7MAUIYgL\nmNJpk6MwWyCnRbFLW8iemCY=\n-----END PRIVATE KEY-----`;\n\nexport const ca = process.env.CY2_EMPTY_CA\n  ? ''\n  : `-----BEGIN CERTIFICATE-----\n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\n-----END CERTIFICATE-----`;\n", "import net from 'net';\n\nexport function pipeSocketToRemoteDestination({\n  socket,\n  port,\n  hostname,\n}: {\n  socket: net.Socket;\n  port: number;\n  hostname: string;\n}) {\n  // proxy to the target with no interception\n  const conn = net.connect(port, hostname);\n\n  conn.on('ready', function tunnel() {\n    socket.pipe(conn);\n    conn.pipe(socket);\n    socket.write('HTTP/1.1 200 OK\\r\\n\\r\\n');\n  });\n\n  // One important caveat is that if the Readable stream emits an error during processing, the Writable destination is not closed automatically. If an error occurs, it will be necessary to manually close each stream in order to prevent memory leaks.\n  conn.on('error', function () {\n    // for some reason, socket keeps writing to conn after conn is ended, triggering an error AFTER_WRITE_FINISHED error\n    conn.end();\n    conn.destroy();\n    socket.end();\n    socket.destroy();\n  });\n\n  socket.on('error', function () {\n    socket.end();\n    socket.destroy();\n    conn.end();\n    conn.destroy();\n  });\n}\n\nexport function pipeSocketToLocalPort({\n  socket,\n  port,\n}: {\n  socket: net.Socket;\n  port: number;\n}) {\n  const socketToInterceptor = net.connect(port);\n\n  socketToInterceptor.on('ready', () => {\n    socketToInterceptor.pipe(socket);\n    socket.pipe(socketToInterceptor);\n    socket.write('HTTP/1.1 200 OK\\r\\n\\r\\n');\n  });\n\n  socketToInterceptor.on('error', () => {\n    socket.end();\n    socket.destroy();\n  });\n\n  socketToInterceptor.on('end', () => {\n    socket.end();\n    socket.destroy();\n  });\n\n  socket.on('error', () => {\n    socketToInterceptor.end();\n    socketToInterceptor.destroy();\n  });\n\n  socket.on('end', () => {\n    socketToInterceptor.end();\n    socketToInterceptor.destroy();\n  });\n}\n", "import http from 'http';\nimport https from 'https';\nimport net from 'net';\nimport { debugNet } from './debug';\n\nexport function runProxyChain(\n  req: http.IncomingMessage,\n  socket: net.Socket,\n  upstreamProxy: URL\n) {\n  debugNet('Proxy chain to upstream for', req.url);\n\n  upstreamProxy.protocol === 'https:'\n    ? https\n    : http\n        .request({\n          method: 'CONNECT',\n          path: req.url,\n          headers: req.headers,\n          agent: false,\n          hostname: upstreamProxy.hostname,\n          port: upstreamProxy.port,\n          protocol: upstreamProxy.protocol,\n        })\n        .once('upgrade', onUpgrade)\n        .once('connect', onConnect)\n        .once('error', onError)\n        .once('response', onResponse)\n        .end();\n\n  function onResponse(res) {\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, proxySocket) {\n    process.nextTick(function () {\n      onConnect(res, proxySocket);\n    });\n  }\n\n  function onConnect(res, proxySocket) {\n    proxySocket.setNoDelay(true);\n    proxySocket.removeAllListeners();\n\n    if (res.statusCode === 200) {\n      socket.pipe(proxySocket);\n      proxySocket.pipe(socket);\n      socket.write('HTTP/1.1 200 OK\\r\\n\\r\\n');\n    } else {\n      socket.write('HTTP/1.1 500 SERVER ERROR\\r\\n\\r\\n');\n      socket.end();\n      socket.destroy();\n    }\n\n    proxySocket.on('error', () => {\n      proxySocket.end();\n      proxySocket.destroy();\n      socket.end();\n      socket.destroy();\n    });\n\n    socket.on('error', () => {\n      proxySocket.end();\n      proxySocket.destroy();\n      socket.end();\n      socket.destroy();\n    });\n  }\n\n  function onError(err) {\n    console.error('Upstream proxy connection error', err);\n    socket.end();\n    socket.destroy();\n  }\n}\n", "import { pipe } from 'fp-ts/function';\nimport * as o from 'fp-ts/Option';\nimport fs from 'fs';\nimport { chain, isUndefined, pick } from 'lodash';\nimport tmp from 'tmp';\nimport { URL } from 'url';\nimport { getCA } from './ca';\nimport { debug } from './debug';\nimport { warn } from './log';\n\nconst falsyEnv = (v: string) => {\n  return v === 'false' || v === '0' || !v;\n};\n\nexport function getSanitizedEnvironment() {\n  const result = pick(process.env, [\n    'NO_PROXY',\n    'HTTP_PROXY',\n    'HTTPS_PROXY',\n    'no_proxy',\n    'http_proxy',\n    'https_proxy',\n    'npm_config_proxy',\n    'npm_config_https_proxy',\n    'npm_config_noproxy',\n  ]);\n\n  debug('Original environment variables %o', result);\n\n  // override uppercase with lowercase non falsy value regardless of existing uppercase value\n  [\n    ['http_proxy', 'HTTP_PROXY'],\n    ['https_proxy', 'HTTPS_PROXY'],\n    ['no_proxy', 'NO_PROXY'],\n  ].forEach(([from, to]) => {\n    if (!falsyEnv(result[from])) {\n      debug('Copying lowercase %s to %s', from, to);\n      result[to] = result[from];\n    }\n  });\n\n  // override only if target is undefined and source is not falsy\n  [\n    ['npm_config_proxy', 'HTTP_PROXY'],\n    ['npm_config_https_proxy', 'HTTPS_PROXY'],\n  ].forEach(([from, to]) => {\n    if (!falsyEnv(result[from]) && isUndefined(result[to])) {\n      debug(\"Using npm's %s as %s\", from, to);\n      result[to] = result[from];\n    }\n  });\n\n  // only return uppercase env vars, remove the others\n  const r = {\n    https_proxy: undefined,\n    http_proxy: undefined,\n    npm_config_proxy: undefined,\n    npm_config_https_proxy: undefined,\n    NO_PROXY: result.NO_PROXY,\n    HTTP_PROXY: result.HTTP_PROXY,\n    HTTPS_PROXY: result.HTTPS_PROXY,\n  };\n  debug('Sanitized environment variables %o', r);\n  return r;\n}\n\nexport function getSettings({ port }: { port: number }) {\n  const ca = getCA();\n  const tmpobj = tmp.fileSync();\n  fs.writeFileSync(tmpobj.name, ca);\n\n  return {\n    caPath: tmpobj.name,\n    proxyURL: `http://127.0.0.1:${port}`,\n  };\n}\n\nexport function getUpstreamProxy(\n  envVariables: Record<string, string | undefined>\n) {\n  return pipe(\n    o.fromNullable(envVariables.HTTPS_PROXY),\n    o.map((r) => ({\n      source: 'HTTPS_PROXY',\n      value: r,\n    })),\n    o.alt(() =>\n      pipe(\n        o.fromNullable(envVariables.HTTP_PROXY),\n        o.map((r) => ({\n          source: 'HTTP_PROXY',\n          value: r,\n        }))\n      )\n    ),\n    o.map((i) => {\n      warnProtocolMismatch(i.source, new URL(i.value));\n      return new URL(i.value);\n    }),\n    o.fold(\n      () => null,\n      (r) => {\n        debug('Using upstream proxy %o', r);\n        return r;\n      }\n    )\n  );\n}\n\nexport function warnProtocolMismatch(source: string, url: URL) {\n  if (url.protocol === 'http:' && source === 'HTTPS_PROXY') {\n    warn(\n      \"Mismatch between protocol 'http' and env variable HTTPS_PROXY: %s. Use HTTP_PROXY instead.\",\n      url\n    );\n  }\n  if (url.protocol === 'https:' && source === 'HTTP_PROXY') {\n    warn(\n      \"Mismatch between protocol 'https' and env variable HTTP_PROXY: %s. USE HTTPS_PROXY instead.\",\n      url\n    );\n  }\n  return;\n}\n\n/**\nOverride HTTP_PROXY and maybe HTTPS_PROXY env variables with our own proxy URL\n\nRelevant documentation: {@link https://docs.cypress.io/guides/references/proxy-configuration#Proxy-environment-variables}\n\n\nThe cloud API implementation: they copy HTTP_PROXY to HTTPS_PROXY at https://github.com/cypress-io/cypress/blob/develop/packages/server/lib/util/proxy.ts#L23.\n\nLater they use HTTPS_PROXY for cloud connections and 'proxy-from-env' npm package\n- https://github.com/cypress-io/cypress/blob/develop/packages/network/lib/agent.ts#L347\n- https://github.com/cypress-io/cypress/blob/develop/packages/server/lib/cloud/api.ts#L45\n*/\nexport function getEnvOverrides(\n  settings: ReturnType<typeof getSettings>,\n  envVariables: Record<string, string | undefined>\n): Partial<Record<string, string>> {\n  return chain({\n    ...envVariables,\n    // They use outdated `@cyrpress/request` for uploading artifacts\n    // it doesn't like HTTP_PROXY for some reason.\n    // That affects sorry-cypress users with `http:` storage urls\n    // see https://github.com/sorry-cypress/cy2/issues/47\n    HTTP_PROXY: undefined,\n    HTTPS_PROXY: settings.proxyURL,\n    NODE_EXTRA_CA_CERTS: settings.caPath,\n    CYPRESS_API_URL: undefined, // remove for preflight\n  })\n    .tap((o) => debug('Resolved proxy environment variables %o', o))\n    .value();\n}\n\nexport function overrideProcessEnv(newEnv: Partial<Record<string, string>>) {\n  Object.entries(newEnv).forEach(([key, value]) => {\n    if (isUndefined(value)) {\n      debug('Deleting env %s', key);\n      process.env[key] = value;\n      delete process.env[key];\n      return;\n    }\n    debug('Setting env %s=%s', key, value);\n    process.env[key] = value;\n  });\n}\n", "import { pipe } from 'fp-ts/function';\nimport * as o from 'fp-ts/Option';\nimport fs from 'fs';\nimport { ca } from './cert';\nimport { debug } from './debug';\n\nexport const getCA = () =>\n  pipe(\n    o.fromNullable(process.env.NODE_EXTRA_CA_CERTS),\n    o.chain((r) => o.tryCatch(() => fs.readFileSync(r))),\n    o.map((r) => {\n      debug(\n        'Augmenting NODE_EXTRA_CA_CERTS: %s',\n        process.env.NODE_EXTRA_CA_CERTS\n      );\n      return `${ca}\\n${r}`;\n    }),\n    o.getOrElse(() => ca)\n  );\n"],
  "mappings": "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",
  "names": ["log_exports", "__export", "error", "warn", "import_chalk", "import_util", "init_log", "__esmMin", "args", "chalk", "util", "debug_exports", "__export", "debugHttpProxy", "import_debug", "init_debug", "__esmMin", "_debug", "require_common", "__commonJSMin", "exports", "common", "url", "extend", "required", "upgradeHeader", "isSSL", "outgoing", "options", "req", "forward", "_options", "e", "target", "targetPath", "outgoingPath", "hasPort", "socket", "res", "args", "lastIndex", "last", "lastSegs", "retSegs", "rewriteCookieProperty", "header", "config", "property", "headerElement", "match", "prefix", "previousValue", "newValue", "host", "require_web_outgoing", "__commonJSMin", "exports", "module", "url", "common", "redirectRegex", "req", "res", "proxyRes", "options", "target", "u", "rewriteCookieDomainConfig", "rewriteCookiePathConfig", "preserveHeaderKeyCase", "rawHeaderKeyMap", "setHeader", "key", "header", "i", "require_web_incoming", "__commonJSMin", "exports", "module", "httpNative", "httpsNative", "web_o", "common", "followRedirects", "pass", "nativeAgents", "req", "res", "options", "encrypted", "values", "header", "_options", "_", "server", "clb", "agents", "http", "https", "forwardReq", "forwardError", "createErrorHandler", "proxyReq", "socket", "proxyError", "url", "err", "proxyRes", "i", "require_ws_incoming", "__commonJSMin", "exports", "module", "http", "https", "common", "req", "socket", "options", "values", "header", "head", "server", "clb", "createHttpHeader", "line", "headers", "key", "value", "i", "proxyReq", "onOutgoingError", "res", "proxyRes", "proxySocket", "proxyHead", "err", "require_http_proxy", "__commonJSMin", "exports", "module", "debugHttpProxy", "error", "omit", "pick", "isUndefined", "httpProxy", "extend", "parse_url", "EE3", "http", "https", "web", "ws", "ProxyServer", "createRightProxy", "type", "options", "req", "res", "passes", "args", "cntr", "head", "cbl", "requestOptions", "e", "i", "pass", "err", "port", "hostname", "callback", "self", "closure", "socket", "done", "passName", "v", "idx", "require_http_proxy", "__commonJSMin", "exports", "module", "ProxyServer", "createProxyServer", "options", "require_http_proxy", "__commonJSMin", "exports", "module", "src_exports", "__export", "getCypressCLIBinPath", "run", "spawn", "__toCommonJS", "import_register", "import_path", "import_debug", "debug", "_debug", "debugNet", "init_log", "getCypressCLIBinPath", "_a", "debug", "cypressPath", "cypress", "result", "err", "error", "import_child_process", "import_os", "package_default", "a", "import_function", "o", "import_http", "import_http_terminator", "import_micromatch", "enc", "s", "e", "import_https_proxy_agent", "cert", "key", "ca", "httpProxy", "init_log", "inteceptors", "stopInterceptors", "debugNet", "interceptor", "i", "all", "resolve", "getUpstreamInterceptor", "target", "upstreamProxy", "agent", "createInterceptor", "getDirectInterceptor", "key", "cert", "err", "type", "warn", "import_net", "pipeSocketToRemoteDestination", "socket", "port", "hostname", "conn", "net", "pipeSocketToLocalPort", "socketToInterceptor", "import_http", "import_https", "runProxyChain", "req", "socket", "upstreamProxy", "debugNet", "https", "http", "onUpgrade", "onConnect", "onError", "onResponse", "res", "proxySocket", "err", "startProxy", "target", "upstreamProxy", "envVariables", "resolve", "reject", "_a", "onConnect", "getOnConnect", "proxy", "http", "httpTerminator", "stopProxy", "debugNet", "address", "isAddress", "stopInterceptors", "noProxy", "req", "socket", "hostname", "port", "shouldIntercept", "interceptRequest", "shouldUseUpstreamProxy", "runProxyChain", "pipeSocketToRemoteDestination", "getUpstreamInterceptor", "getDirectInterceptor", "pipeSocketToLocalPort", "result", "enc", "value", "import_function", "o", "import_fs", "import_lodash", "import_tmp", "import_url", "import_function", "o", "import_fs", "getCA", "r", "fs", "debug", "ca", "init_log", "falsyEnv", "v", "getSanitizedEnvironment", "result", "debug", "from", "to", "r", "getSettings", "port", "ca", "getCA", "tmpobj", "tmp", "fs", "getUpstreamProxy", "envVariables", "i", "warnProtocolMismatch", "source", "url", "warn", "getEnvOverrides", "settings", "o", "overrideProcessEnv", "newEnv", "key", "value", "spawn", "apiUrl", "debug", "package_default", "rest", "cliBinPath", "getCypressCLIBinPath", "isWindows", "cmd", "args", "envVariables", "getSanitizedEnvironment", "upstreamProxy", "getUpstreamProxy", "port", "startProxy", "cp", "getEnvOverrides", "getSettings", "code", "run", "config", "cypress", "originalEnv", "stop", "overrideProcessEnv"]
}
