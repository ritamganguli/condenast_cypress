"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// plugin/index.ts
var plugin_exports = {};
__export(plugin_exports, {
  cloudPlugin: () => cloudPlugin,
  default: () => plugin_default
});
module.exports = __toCommonJS(plugin_exports);
var import_fs = __toESM(require("fs"));
var import_util = require("util");
async function cloudPlugin(_on, config) {
  function debug(...args) {
    if (config.env.currents_debug_enabled) {
      console.debug("[currents:plugin]", (0, import_util.format)(...args));
    }
  }
  debug("currents plugin loaded");
  if (config.env.currents_temp_file) {
    debug("dumping config to '%s'", config.env.currents_temp_file);
    import_fs.default.writeFileSync(config.env.currents_temp_file, JSON.stringify(config));
    debug("config is availabe at '%s'", config.env.currents_temp_file);
  }
  return config;
}
var plugin_default = cloudPlugin;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  cloudPlugin
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vcGx1Z2luL2luZGV4LnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyIvLy8gPHJlZmVyZW5jZSB0eXBlcz1cIkN5cHJlc3NcIiAvPlxuXG5pbXBvcnQgZnMgZnJvbSBcImZzXCI7XG5pbXBvcnQgeyBmb3JtYXQgfSBmcm9tIFwidXRpbFwiO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY2xvdWRQbHVnaW4oXG4gIF9vbjogQ3lwcmVzcy5QbHVnaW5FdmVudHMsXG4gIGNvbmZpZzogQ3lwcmVzcy5QbHVnaW5Db25maWdPcHRpb25zXG4pIHtcbiAgZnVuY3Rpb24gZGVidWcoLi4uYXJnczogdW5rbm93bltdKSB7XG4gICAgaWYgKGNvbmZpZy5lbnYuY3VycmVudHNfZGVidWdfZW5hYmxlZCkge1xuICAgICAgY29uc29sZS5kZWJ1ZyhcIltjdXJyZW50czpwbHVnaW5dXCIsIGZvcm1hdCguLi5hcmdzKSk7XG4gICAgfVxuICB9XG5cbiAgZGVidWcoXCJjdXJyZW50cyBwbHVnaW4gbG9hZGVkXCIpO1xuXG4gIGlmIChjb25maWcuZW52LmN1cnJlbnRzX3RlbXBfZmlsZSkge1xuICAgIGRlYnVnKFwiZHVtcGluZyBjb25maWcgdG8gJyVzJ1wiLCBjb25maWcuZW52LmN1cnJlbnRzX3RlbXBfZmlsZSk7XG4gICAgZnMud3JpdGVGaWxlU3luYyhjb25maWcuZW52LmN1cnJlbnRzX3RlbXBfZmlsZSwgSlNPTi5zdHJpbmdpZnkoY29uZmlnKSk7XG4gICAgZGVidWcoXCJjb25maWcgaXMgYXZhaWxhYmUgYXQgJyVzJ1wiLCBjb25maWcuZW52LmN1cnJlbnRzX3RlbXBfZmlsZSk7XG4gIH1cblxuICByZXR1cm4gY29uZmlnO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbG91ZFBsdWdpbjtcbiJdLAogICJtYXBwaW5ncyI6ICI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBLGdCQUFlO0FBQ2Ysa0JBQXVCO0FBRXZCLGVBQXNCLFlBQ3BCLEtBQ0EsUUFDQTtBQUNBLFdBQVMsU0FBUyxNQUFpQjtBQUNqQyxRQUFJLE9BQU8sSUFBSSx3QkFBd0I7QUFDckMsY0FBUSxNQUFNLHlCQUFxQixvQkFBTyxHQUFHLElBQUksQ0FBQztBQUFBLElBQ3BEO0FBQUEsRUFDRjtBQUVBLFFBQU0sd0JBQXdCO0FBRTlCLE1BQUksT0FBTyxJQUFJLG9CQUFvQjtBQUNqQyxVQUFNLDBCQUEwQixPQUFPLElBQUksa0JBQWtCO0FBQzdELGNBQUFBLFFBQUcsY0FBYyxPQUFPLElBQUksb0JBQW9CLEtBQUssVUFBVSxNQUFNLENBQUM7QUFDdEUsVUFBTSw4QkFBOEIsT0FBTyxJQUFJLGtCQUFrQjtBQUFBLEVBQ25FO0FBRUEsU0FBTztBQUNUO0FBRUEsSUFBTyxpQkFBUTsiLAogICJuYW1lcyI6IFsiZnMiXQp9Cg==